import {Palette,  Button, ScrollView, StandardTableView, TabWidget, VerticalBox } from "std-widgets.slint";
import { TableData , Note, Command} from "../types.slint";
import { CustomButton } from "../components/button.slint";
import { ListView, HorizontalBox, TextEdit } from "std-widgets.slint";
import { TaskBar } from "../components/TaskBar.slint";
import { DeleteComfirm } from "../components/delete-popup.slint";



component TableHeader inherits Rectangle {
    in property <string> column1;
    in property <string> column2;

    HorizontalLayout {
        alignment: space-around;
        Rectangle {
            Text {
                text: column1;
                font-size: 14px;
                font-weight: 700;
            }
        }

        Rectangle {
            if TableData.files_error != "" && !TableData.has_selected_row:Text {
                text: column2;
                font-size: 14px;
                font-weight: 700;
                color: red;
            }
        }
    }
}

export component NotesSect inherits Rectangle {
    background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;
    border-radius: 10px;
    callback open-note-popup();
    callback delte-note();
    callback delete-file();
    note-delete := DeleteComfirm {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        clicked => {
            TableData.delete-active-note(TableData.active-note.id);
            notes-table.current-row = -1;
            self.close()
        }
    }

    file-delete := DeleteComfirm {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        clicked => {
            TableData.delete-active-file(TableData.active-file.id);
            files-table.current-row = -1;
            self.close()
        }
    }

    HorizontalLayout {
        padding: 16px;
        spacing: 16px;

        VerticalLayout {
            Rectangle {
                width: 50%;
                background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;
                tw := TabWidget {
                    Tab {
                        title: @tr("Notes");
                        VerticalLayout {
                            spacing: 16px;
                            HorizontalLayout {
                                spacing: 16px;
                            }

                            if TableData.notes-error != "": TableHeader {
                                column2: TableData.notes-error;
                                background: Palette.color-scheme == ColorScheme.dark ? #bf616a : #c24141;
                            }
                            Rectangle {
                                background: Palette.color-scheme == ColorScheme.dark ? #3b4252 : #fff;
                                border-color: Palette.color-scheme == ColorScheme.dark ? #434c5e : #d8dee9;
                                border-radius: 8px;
                                border-width: 1px;
                                padding: 24px;
                                drop-shadow-offset-x: 0px;
                                drop-shadow-offset-y: 4px;
                                drop-shadow-blur: 12px;
                                drop-shadow-color: Palette.color-scheme == ColorScheme.dark ? #00000066 : #0000001a;

                                notes-table := StandardTableView {
                                    width: 100%;
                                    height: 100%;
                                    columns: [
                                        { title: "id", width:50px },
                                        { title: "pinned", width:70px },
                                        { title: "text" },
                                    ];
                                    current-row-changed() => {
                                        TableData.current-notes-row = self.current-row;
                                        TableData.has-active-note = true;
                                        TableData.current-note-row-change(TableData.current-notes-row);
                                    }
                                    rows: TableData.notes-rows-for-active-relative;
                                }
                            }
                        }
                    }

                    Tab {
                        title: @tr("Files");
                        VerticalLayout {
                            spacing: 16px;
                            padding: 16px;
                            if TableData.files_error != "": TableHeader {
                                column2: TableData.files_error;
                                background: Palette.color-scheme == ColorScheme.dark ? #bf616a : #c24141;
                            }
                            Rectangle {
                                background: Palette.color-scheme == ColorScheme.dark ? #3b4252 : #fff;
                                border-color: Palette.color-scheme == ColorScheme.dark ? #434c5e : #d8dee9;
                                border-radius: 8px;
                                border-width: 1px;
                                padding: 24px;
                                drop-shadow-offset-x: 0px;
                                drop-shadow-offset-y: 4px;
                                drop-shadow-blur: 12px;
                                drop-shadow-color: Palette.color-scheme == ColorScheme.dark ? #00000066 : #0000001a;

                                files-table := StandardTableView {
                                    width: 100%;
                                    height: 100%;
                                    columns: [
                                        { title: "id", width: 50px },
                                        { title: "pinned", width:70px },
                                        { title: "filename" },
                                        { title: "type" },
                                    ];
                                    current-row-changed() => {
                                        TableData.current-files-row = self.current-row;
                                        TableData.has-active-file = true;
                                        TableData.current-file-row-change(TableData.current-files-row);
                                    }
                                    rows: TableData.files-rows-for-active-relative;
                                }
                            }
                        }
                    }
                }
            }
        }

      // notes
        if tw.current-index == 0: VerticalLayout {
            note-container := Rectangle {
                in-out property <string> text;
                in-out property <bool> show-input;
                border-radius: 8px;
                if notes-table.current-row > -1:VerticalLayout {
                    spacing: 16px;
                    Text {
                        text: @tr("Active Note | id: {}", TableData.active-note.id);
                        font-size: 16px;
                        font-weight: 600;
                        color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
                        horizontal-alignment: center;
                    }

                    Rectangle {
                        background: Palette.color-scheme == ColorScheme.dark ? #3b4252 : #e5e9f0;
                        border-radius: 8px;
                        border-width: 1px;
                        border-color: Palette.color-scheme == ColorScheme.dark ? #434c5e : #d8dee9;
                        padding: 24px;
                        drop-shadow-offset-x: 0px;
                        drop-shadow-offset-y: 4px;
                        drop-shadow-blur: 12px;
                        drop-shadow-color: Palette.color-scheme == ColorScheme.dark ? #00000066 : #0000001a;

                        note-input := TextEdit {
                            in-out property <string> note-text <=> note-container.text;
                            width: 100%;
                            height: 100%;
                            placeholder-text: "Enter your note here...";
                            font-size: 14px;
                            text: TableData.active-note.text;
                            wrap: word-wrap;
                            edited(text) => {
                                note-container.text = text;
                            }
                        }
                    }
                }
            }

            if tw.current-index == 0:HorizontalBox {
                alignment: center;
                spacing: 12px;

                CustomButton {
                    title: "Add Note";
                    height: 40px;
                    width: 120px;
                    text-color: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #2e3440;
                    background: Palette.color-scheme == ColorScheme.dark ? #88c0d0 : #81a1c1;
                    border-radius: 6px;
                    clicked => {
                        open-note-popup()
                    }
                }

                if notes-table.current-row > -1: CustomButton {
                    height: 40px;
                    width: 120px;
                    title: TableData.active-note.pinned ? "Unpin Note" : "Pin Note";
                    text-color: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #2e3440;
                    background: Palette.color-scheme == ColorScheme.dark ? (TableData.active-note.pinned ? #8fbcbb : #5e81ac) : (TableData.active-note.pinned ? #a3be8c : #d08770);
                    border-radius: 6px;
                    clicked => {
                        if TableData.active-note.pinned {
                            TableData.pin-active-note(TableData.active-note.id, Command.UNPIN);
                            note-container.show-input = false;
                        } else if !TableData.active-note.pinned {
                            TableData.pin-active-note(TableData.active-note.id, Command.PIN);
                            note-container.show-input = false;
                        }
                    }
                }
                if notes-table.current-row > -1:CustomButton {
                    height: 40px;
                    width: 120px;
                    title: "Save Note";
                    text-color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #ffffff;
                    background: green;
                    border-radius: 6px;
                    clicked => {
                        TableData.save-edited-note(TableData.active-note.id, note-container.text);
                        note-container.text = TableData.active-note.text;
                        notes-table.current-row = -1;
                    }
                }
                if notes-table.current-row > -1:CustomButton {
                    height: 40px;
                    width: 140px;
                    title: "Delete Note";
                    text-color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #ffffff;
                    background: Palette.color-scheme == ColorScheme.dark ? #bf616a : #bf616a;
                    border-radius: 6px;
                    clicked => {
                        note-delete.show()
                    }
                }
            }
        }

        // files
        if tw.current-index == 1: VerticalLayout {
            if files-table.current-row >= 0: Rectangle {
                border-radius: 8px;
                padding: 24px;
                background: Palette.color-scheme == ColorScheme.dark ? #3b4252 : #e5e9f0;
                VerticalLayout {
                    spacing: 16px;
                    alignment: LayoutAlignment.center;
                    Text {
                        text: @tr("Active File");
                        font-size: 16px;
                        font-weight: 600;
                        color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
                        horizontal-alignment: center;
                    }

                    Rectangle {
                        padding: 24px;
                        border-radius: 8px;
                        background: Palette.color-scheme == ColorScheme.dark ? #434c5e : #ffffff;
                        drop-shadow-offset-x: 0px;
                        drop-shadow-offset-y: 4px;
                        drop-shadow-blur: 12px;
                        drop-shadow-color: Palette.color-scheme == ColorScheme.dark ? #00000066 : #0000001a;
                        border-width: 1px;
                        border-color: Palette.color-scheme == ColorScheme.dark ? #4c566a : #d8dee9;
                        VerticalLayout {
                            spacing: 12px;
                            alignment: center;
                            Text {
                                text: @tr("filename: {}", TableData.active-file.filename);
                                horizontal-alignment: center;
                                font-weight: 600;
                                color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
                            }

                            Text {
                                text: @tr("File Type: {}", TableData.active-file.type);
                                horizontal-alignment: center;
                                color: Palette.color-scheme == ColorScheme.dark ? #d8dee9 : #4c566a;
                            }
                        }
                    }
                }
            }
            HorizontalBox {
                alignment: center;
                spacing: 12px;
                CustomButton {
                    title: @tr("Add File");
                    height: 40px;
                    width: 120px;
                    text-color: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #2e3440;
                    background: Palette.color-scheme == ColorScheme.dark ? #88c0d0 : #81a1c1;
                    border-radius: 6px;
                    clicked => {
                        TableData.add-files-for-relative(TableData.current_row, TableData.active-relative.id);
                    }
                }

                if files-table.current-row >= 0: CustomButton {
                    height: 40px;
                    width: 120px;
                    title: TableData.active-file.pinned ? "Unpin" : "Pin";
                    text-color: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #2e3440;
                    background: Palette.color-scheme == ColorScheme.dark ? (TableData.active-file.pinned ? #8fbcbb : #5e81ac) : (TableData.active-file.pinned ? #a3be8c : #d08770);
                    border-radius: 6px;
                    clicked => {
                        if TableData.active-file.pinned {
                            TableData.pin-active-file(TableData.active-file.id, Command.UNPIN)
                        } else if !TableData.active-file.pinned {
                            TableData.pin-active-file(TableData.active-file.id, Command.PIN)
                        }
                    }
                }
                if files-table.current-row >= 0:CustomButton {
                    height: 40px;
                    width: 120px;
                    title: "Delete File";
                    text-color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #ffffff;
                    background: Palette.color-scheme == ColorScheme.dark ? #bf616a : #bf616a;
                    border-radius: 6px;
                    clicked => {
                        file-delete.show()
                    }
                }
            }
        }
    }
}
