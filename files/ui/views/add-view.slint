import { CustomButton } from "../components/button.slint";
import { Button, CheckBox, Switch, HorizontalBox, Slider, LineEdit, GroupBox, ComboBox, DatePickerPopup, VerticalBox, Palette, StandardTableView , ScrollView, TextEdit} from "std-widgets.slint";
import { TableData , Relative} from "../types.slint";

export component AddView inherits Rectangle {
    in-out property <Relative> relative;
    in-out property <string> name;
    border-radius: 10px;
    VerticalLayout {
        spacing: 10px;
        padding: 10px;
        message := PopupWindow {
            height: 160px;
            width: 320px;
            close-on-click: false;
            x: (root.width - self.width) / 2;
            y: (root.height - self.height) / 2;

            Rectangle {
                width: parent.width;
                height: parent.height;
                background: #ffffff;
                border-radius: 12px;
                drop-shadow-color: #00000020;
                drop-shadow-offset-x: 0px;
                drop-shadow-offset-y: 4px;
                drop-shadow-blur: 16px;

                VerticalLayout {
                    padding: 24px;
                    spacing: 20px;

                    Rectangle {
                        height: 160px;
                        width: 320px;
                        border-radius: 24px;
                        background: TableData.create-success != "" ? #E7F7EE : #FEE4E2;

                        Image {
                            source: TableData.create-success != "" ? @image-url("../../assets/icons/check-circle.svg") : @image-url("../../assets/icons/x-circle.svg");
                            width: 24px;
                            height: 24px;
                            x: (parent.width - self.width) / 2;
                            y: (parent.height - self.height) / 2;
                            colorize: TableData.create-success != "" ? #039855 : #D92D20;
                        }
                    }

                    Text {
                        horizontal-alignment: center;
                        text: TableData.create-success != "" ? TableData.create-success : TableData.create-error;
                        font-size: 16px;
                        font-weight: 500;
                        wrap: TextWrap.word-wrap;
                        color: #101828;
                    }

                    HorizontalLayout {
                        alignment: center;
                        padding-top: 8px;

                        CustomButton {
                            width: 80px;
                            height: 30px;
                            background: TableData.create-success != "" ? #039855 : #D92D20;
                            border-radius: 8px;
                            title: "Close";
                            text-color: white;

                            clicked => {
                                TableData.selected-mother-name = "";
                                TableData.selected-father-name = "";
                                message.close()
                            }
                        }
                    }
                }
            }
        }

        ScrollView {
            VerticalLayout {
                spacing: 15px;
                GroupBox {
                    title: "Personal Information";
                    VerticalLayout {
                        spacing: 10px;
                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "First Name";
                                }

                                first-name := LineEdit {
                                    placeholder-text: "First Name";
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Middle Name";
                                }

                                middle-name := LineEdit {
                                    placeholder-text: "Middle Name";
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Last Name";
                                }

                                last-name := LineEdit {
                                    placeholder-text: "Last Name";
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Sex";
                                }

                                sex := ComboBox {
                                    width: 25%;
                                    model: ["male", "female"];
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Birthday";
                                }

                                birthday := LineEdit {
                                    placeholder-text: "Birthday (YYYY-MM-DD)";
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Phone";
                                }

                                phone := LineEdit {
                                    placeholder-text: "Phone";
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Email";
                                }

                                email := LineEdit {
                                    placeholder-text: "Email (me@example.com)";
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Sameness";
                                }

                                sameness := LineEdit {
                                    placeholder-text: "Sameness (0-1, ex: 0.9)";
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: @tr("Hotness | {}", hotness.value);
                                }

                                hotness := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Employable| {}", employable.value);
                                }

                                employable := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Swarthy| {}", swarthy.value);
                                }

                                swarthy := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Crazy  | {}",crazy.value);
                                }

                                crazy := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Lost Reason";
                                }

                                lost := LineEdit {
                                    placeholder-text: "Lost Reason";
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            pinned := CheckBox {
                                text: "Pinned";
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            alignment: space-around;
                            VerticalLayout {
                                Text {
                                    text: "Choose Mother";
                                }

                                mother := ComboBox {
                                    model: TableData.females2;
                                    current-value: "";
                                    current-index: -1;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Choose Father";
                                }

                                father := ComboBox {
                                    model: TableData.males;
                                    current-value: "";
                                    current-index: -1;
                                }
                            }
                        }

                        HorizontalBox {
                            Button {
                                text: "Save";
                                clicked => {
                                    relative = {
                                        first-name: first-name.text,
                                        middle-name: middle-name.text,
                                        last-name: last-name.text,
                                        sex: sex.current-value,
                                        phone: phone.text,
                                        email: email.text,
                                        birthday: birthday.text,
                                        lost-reason: lost.text,
                                        sameness: sameness.text,
                                        pinned: pinned.checked,
                                        hotness: hotness.value,
                                        employable: employable.value,
                                        crazy: crazy.value,
                                        swarthy: swarthy.value,
                                    };
                                    TableData.create-new-relative(relative, mother.current-value, father.current-value);
                                    first-name.text = "";
                                    middle-name.text = "";
                                    last-name.text = "";
                                    sex.current-value = "male";
                                    phone.text = "";
                                    email.text = "";
                                    birthday.text = "";
                                    lost.text = "";
                                    sameness.text = "";
                                    pinned.checked = false;
                                    hotness.value = 0;
                                    employable.value = 0;
                                    crazy.value = 0;
                                    swarthy.value = 0;
                                    relative = { };
                                    message.show();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
