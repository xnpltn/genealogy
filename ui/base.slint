import { CustomButton } from "components/button.slint";
import {  AddView } from "views/add-view.slint";
import { UpdateView } from "views/update-view.slint";
import { TabsView } from "views/tabs-view.slint";
import { Palette, Button } from "std-widgets.slint";
import { TableData, CrudMessages } from "types.slint";
import { Switch, TextEdit, HorizontalBox, ScrollView } from "std-widgets.slint";
import { TaskBar } from "components/TaskBar.slint";
import { MessagePopup } from "./components/message-popup.slint";


export { TableData , CrudMessages }

component Header inherits Rectangle {
    in-out property <bool> dark-mode;
    callback open-add-new();
    in-out property <string> title;
    height: 60px;
    background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;

    HorizontalLayout {
        padding: 10px;
        alignment: space-between;
        Rectangle {
            Text {
                text: @tr("{}", title);
                font-size: 24px;
                font-weight: 700;
                color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
            }
        }

        @children
    }
}

export component Main inherits Window {
    min-width: 1280px;
    min-height: 720px;
    title: "Genealogy App";

    about-panel := PopupWindow {
        width: 200px;
        height: 200px;
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        Rectangle {
            height: 200px;
            width: 200px;
            HorizontalLayout {
                alignment: center;
                Text {
                    text: "GenApp 0.1";
                }
            }
        }
    }

    note-pop-up := PopupWindow {
        width: root.width * 40%;
        height: root.height * 40%;
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;

        close-on-click: false;
        Rectangle {
            padding: 20px;
            border-radius: 10px;
            border-color: black;
            border-width: 3px;
            background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;
            VerticalLayout {
                padding: 20px;
                TaskBar {
                    h: 50px;
                    padding: 20px;
                    alignment: space-between;
                    background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;
                    Text {
                        text: @tr("Add Note for {} {}", TableData.active-relative.first-name, TableData.active-relative.last-name);
                        font-size: 16px;
                        font-weight: 300;
                    }

                    CustomButton {
                        title: "Cancel";
                        background: orchid;
                        height: 30px;
                        width: 80px;
                        clicked => {
                            note-pop-up.close();
                            note.text = "";
                        }
                    }
                }

                VerticalLayout {
                    note := TextEdit {
                        height: 200px;
                        placeholder-text: "Type note here";
                    }

                    HorizontalBox {
                        alignment: center;
                        CustomButton {
                            text-color: black;
                            title: "Save";
                            background: #1fe8ff;
                            clicked => {
                                TableData.add-note-for-relative(TableData.active-relative.id, note.text);
                                note-pop-up.close();
                            }
                        }
                    }
                }
            }
        }
    }

    HorizontalLayout {
        VerticalLayout {
            Header {
                title: "GenApp";
                HorizontalLayout {
                    spacing: 10px;
                    alignment: end;
                    if TableData.has_selected_row: TaskBar {
                        alignment: LayoutAlignment.end;
                        h: 20px;
                        Button {
                            text: "Edit Relative";
                            height: 35px;
                            width: 140px;
                            clicked => {
                                TableData.show-update-window();
                            }
                        }
                    }

                    Button {
                        text: "Add Relative";
                        height: 36px;
                        clicked => {
                            TableData.show-add-window()
                        }
                    }

                    Button {
                        text: "About";
                        height: 36px;
                        clicked => {
                            about-panel.show()
                        }
                    }

                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            TabsView {
                open_notes_popup => {
                    note-pop-up.show();
                }
            }
        }
    }
}

export component UpdateWindow inherits Window {
    min-width: 1280px;
    min-height: 720px;

    delete-relative-pupup := MessagePopup {
        message-on-error: CrudMessages.delete-relative-error;
        message-on-success: CrudMessages.delete-relative-success;
        x-pos: (root.width - self.width) / 2;
        y-pos: (root.height - self.height) / 2;
    }

    delete-prompt := PopupWindow {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;
        close-on-click: false;
        height: 250px;
        width: 400px;
        Rectangle {
            height: parent.height;
            width: parent.width;
            background: #ffffff;
            border-radius: 8px;
            drop-shadow-color: #00000029;
            drop-shadow-offset-x: 0px;
            drop-shadow-offset-y: 4px;
            drop-shadow-blur: 24px;
            VerticalLayout {
                padding: 20px;
                spacing: 24px;
                alignment: space-between;
                Text {
                    text: @tr("Confirm Delete, This Action is irreversible");
                    font-size: 18px;
                    font-weight: 500;
                    horizontal-alignment: center;
                    wrap: word-wrap;
                    color: #111827;
                }

                HorizontalLayout {
                    spacing: 12px;
                    alignment: end;
                    CustomButton {
                        width: 100px;
                        height: 36px;
                        title: "Cancel";
                        background: #f3f4f6;
                        text-color: #374151;
                        border-radius: 6px;
                        clicked => {
                            delete-prompt.close();
                        }
                    }

                    CustomButton {
                        width: 100px;
                        height: 36px;
                        title: "Delete";
                        background: #ef4444;
                        text-color: #ffffff;
                        border-radius: 6px;
                        clicked => {
                            TableData.delete-relative(TableData.active-relative.id);
                            delete-relative-pupup.show()
                        }
                    }
                }
            }
        }
    }

    HorizontalLayout {

        VerticalLayout {
            Header {
                title: @tr("Update {}", TableData.active-relative.first-name);
                HorizontalLayout {
                    spacing: 10px;
                    CustomButton {
                        height: 35px;
                        width: 100px;
                        title: @tr("Delete");
                        background: #ef4444;
                        border-radius: 6px;
                        text-color: white;
                        clicked => {
                            delete-prompt.show()
                        }
                    }

                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            UpdateView { }
        }
    }
}

export component CreateWindow inherits Window {
    min-width: 1280px;
    min-height: 720px;
    HorizontalLayout {

        VerticalLayout {
            Header {
                title: "Add New Relative";
                HorizontalLayout {
                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            AddView { }
        }
    }
}
