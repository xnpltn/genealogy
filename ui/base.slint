import { CustomButton } from "components/button.slint";
import {  AddView } from "views/add-view.slint";
import { UpdateView } from "views/update-view.slint";
import { TabsView } from "views/tabs-view.slint";
import { Palette, Button } from "std-widgets.slint";
import { TableData, CrudMessages } from "types.slint";
import { Switch, TextEdit, HorizontalBox } from "std-widgets.slint";
import { TaskBar } from "components/TaskBar.slint";

export { TableData , CrudMessages }

component Header inherits Rectangle {
    in-out property <bool> dark-mode;
    callback open-add-new();
    in-out property <string> title;
    height: 60px;
    background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;

    HorizontalLayout {
        padding: 10px;
        alignment: space-between;
        Rectangle {
            Text {
                text: @tr("{}", title);
                font-size: 24px;
                font-weight: 700;
                color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
            }
        }

        @children
    }
}

export component Main inherits Window {
    min-width: 1280px;
    min-height: 720px;
    title: "Genealogy App";
    note-pop-up := PopupWindow {
        width: root.width * 40%;
        height: root.height * 40%;
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;

        close-on-click: false;
        Rectangle {
            padding: 20px;
            border-radius: 10px;
            border-color: black;
            border-width: 3px;
            VerticalLayout {
                TaskBar {
                    h: 50px;
                    padding: 20px;
                    alignment: space-between;
                    background: whitesmoke;
                    Text {
                        text: @tr("Add Note for {} {}", TableData.active-relative.first-name, TableData.active-relative.last-name);
                        font-size: 16px;
                        font-weight: 300;
                    }

                    CustomButton {
                        title: "close";
                        background: orchid;
                        height: 30px;
                        width: 80px;
                        clicked => {
                            note-pop-up.close()
                        }
                    }
                }

                VerticalLayout {
                    note := TextEdit {
                        height: 200px;
                        placeholder-text: "Type note here";
                    }

                    HorizontalBox {
                        alignment: center;
                        CustomButton {
                            text-color: black;
                            title: "Save";
                            background: #dae8fc;
                            clicked => {
                                TableData.add-note-for-relative(TableData.active-relative.id, note.text);
                            }
                        }
                    }
                }
            }
        }
    }

    HorizontalLayout {
        VerticalLayout {
            Header {
                title: "GenApp";
                HorizontalLayout {
                    spacing: 10px;
                    alignment: end;
                    if TableData.has_selected_row: TaskBar {
                        alignment: LayoutAlignment.end;
                        h: 20px;
                        Button {
                            text: "Edit Relative";
                            height: 40px;
                            width: 140px;
                            clicked => {
                                TableData.show-update-window();
                            }
                        }
                    }

                    Button {
                        text: "Add Relative";
                        height: 36px;
                        clicked => {
                            TableData.show-add-window()
                        }
                    }

                    Button {
                        text: "About";
                        height: 36px;
                    }

                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            TabsView {
                open_notes_popup => {
                    note-pop-up.show();
                }
            }
        }
    }
}

export component UpdateWindow inherits Window {
    min-width: 1280px;
    min-height: 720px;
    HorizontalLayout {

        VerticalLayout {
            Header {
                title: @tr("Update {}", TableData.active-relative.first-name);
                HorizontalLayout {
                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            UpdateView { }
        }
    }
}

export component CreateWindow inherits Window {
    min-width: 1280px;
    min-height: 720px;
    HorizontalLayout {

        VerticalLayout {
            Header {
                title: "Add New Relative";
                HorizontalLayout {
                    Switch {
                        text: @tr("Dark Mode");
                        checked: Palette.color-scheme == ColorScheme.dark;
                        toggled => {
                            Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                        }
                    }
                }
            }

            AddView { }
        }
    }
}
