import {Palette,  Button, ScrollView, StandardTableView, TabWidget, VerticalBox } from "std-widgets.slint";
import { TableData , Note} from "../types.slint";
import { CustomButton } from "../components/button.slint";
import { ListView, HorizontalBox, TextEdit } from "std-widgets.slint";
import { TaskBar } from "../components/TaskBar.slint";



component TableHeader inherits Rectangle {
    in property <string> column1;
    in property <string> column2;

    HorizontalLayout {
        alignment: space-around;
        Rectangle {
            Text {
                text: column1;
                font-size: 14px;
                font-weight: 700;
            }
        }

        Rectangle {
            if TableData.files_error != "" && !TableData.has_selected_row:Text {
                text: column2;
                font-size: 14px;
                font-weight: 700;
                color: red;
            }
        }
    }
}

export component NotesSect inherits Rectangle {
    property <string> active_note: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua...";
    background: Palette.color-scheme == ColorScheme.dark ? #2e3440 : #eceff4;
    border-radius: 10px;
    callback open-note-popup();

    HorizontalLayout {
        padding: 16px;
        spacing: 16px;

        VerticalLayout {
            Rectangle {
                width: 50%;
                TabWidget {
                    Tab {
                        title: "Files";
                        VerticalLayout {
                            spacing: 10px;
                            padding: 10px;

                            HorizontalLayout {
                                spacing: 10px;
                                CustomButton {
                                    visible: TableData.active-relative.id != "";
                                    title: "Add Files";
                                    height: 40px;
                                    width: 120px;
                                    background-color: #12d;
                                    clicked => {
                                        TableData.add-files-for-relative(TableData.current_row, TableData.active-relative.id);
                                    }
                                }
                            }

                            if TableData.files_error != "": TableHeader {
                                column2: TableData.files_error;
                            }

                            Rectangle {
                                border-color: #12d;
                                border-radius: 2px;
                                border-width: 2px;
                                padding: 40px;

                                ListView {
                                    for file in TableData.selected-relative-files: Rectangle {
                                        border-radius: 4px;
                                        border-width: 1px;
                                        border-color: #ddd;
                                        background: white;
                                        height: 35px;
                                        padding: 10px;
                                        HorizontalLayout {
                                            spacing: 8px;
                                            Text {
                                                text: file;
                                                font-size: 16px;
                                                color: #2c3e50;
                                                vertical-alignment: center;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    Tab {
                        title: "Notes";
                        VerticalLayout {
                            spacing: 10px;

                            HorizontalLayout {
                                spacing: 10px;
                                /*CustomButton {
                                    visible: TableData.active-relative.id != "";
                                    height: 40px;
                                    width: 120px;
                                    title: "Add Note";
                                    background: #12d;
                                    clicked => {
                                        open-note-popup()
                                    }
                                }*/
                            }

                            if TableData.notes-error != "": TableHeader {
                                column2: TableData.notes-error;
                            }
                            Rectangle {
                                border-color: #12d;
                                border-radius: 2px;
                                border-width: 2px;
                                padding: 40px;

                                StandardTableView {
                                    width: 100%;
                                    height: 100%;
                                    columns: [{ title: "id" }, { title: "text" }, { title: "pinned" }, { title: "updated at" }];
                                    current-row-changed() => {
                                        TableData.current-notes-row = self.current-row;
                                        TableData.has-active-note = true;
                                        note-container.show-input = true;
                                        TableData.current-note-row-change(TableData.current-notes-row);
                                    }

                                    rows: TableData.notes-rows-for-active-relative;
                                }
                            }
                        }
                    }
                }
            }
        }

        VerticalLayout {
            note-container := Rectangle {
                in-out property <string> text;
                in-out property <bool> show-input;
                border-radius: 10px;
                VerticalLayout {
                    spacing: 10px;
                    Text {
                        text: @tr("Active Note | id: {}", TableData.active-note.id);
                        font-size: 16px;
                        horizontal-alignment: center;
                    }

                    Rectangle {
                        background: Palette.color-scheme == ColorScheme.dark ? #3b4252 : #e5e9f0;
                        border-radius: 10px;
                        padding: 20px;
                        if show-input:  note-input := TextEdit {
                            in-out property <string> note-text <=> note-container.text;
                            width: 100%;
                            height: 100%;
                            placeholder-text: "Enter your note here...";
                            font-size: 14px;
                            text: TableData.active-note.text;
                            wrap: word-wrap;
                            edited(text) => {
                                note-container.text = text;
                            }
                        }
                    }
                }
            }

            HorizontalBox {
                alignment: center;
                CustomButton {
                    title: "Add Note";
                    height: 40px;
                    width: 120px;
                    text-color: black;
                    background: #dae8fc;
                    clicked => {
                        open-note-popup()
                    }
                }

                CustomButton {
                    height: 40px;
                    width: 120px;
                    title: "Pin Note";
                    text-color: black;
                    background: #dae811;
                    clicked => {
                        TableData.pin-active-note(TableData.active-note.id);
                        note-container.show-input = false;
                    }
                }

                CustomButton {
                    height: 40px;
                    width: 120px;
                    title: "Save Note";
                    text-color: white;
                    background: #000099;
                    clicked => {
                        TableData.save-edited-note(TableData.active-note.id, note-container.text);
                        note-container.text = TableData.active-note.text;
                    }
                }
            }
        }
    }
}
