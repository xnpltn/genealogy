import { CustomButton } from "../components/button.slint";
import { Button, CheckBox, Switch, HorizontalBox, Slider, LineEdit, GroupBox, ComboBox, DatePickerPopup, VerticalBox, Palette, StandardTableView , ScrollView, TextEdit} from "std-widgets.slint";
import { TableData , Relative} from "../types.slint";


export component UpdateView inherits Rectangle {
    in-out property <Relative> relative;
    in-out property <Relative> og;

    in-out property <string> title;
    border-radius: 10px;
    VerticalLayout {
        spacing: 10px;
        padding: 10px;

        ScrollView {
            VerticalLayout {
                spacing: 15px;
                GroupBox {
                    title: "Personal Information";
                    VerticalLayout {
                        spacing: 10px;
                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "First Name";
                                }

                                first-name := LineEdit {
                                    placeholder-text: "First Name";
                                    text: TableData.active-relative.first-name;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Middle Name";
                                }

                                middle-name := LineEdit {
                                    placeholder-text: "Middle Name";
                                    text: TableData.active-relative.middle-name;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Last Name";
                                }

                                last-name := LineEdit {
                                    placeholder-text: "Last Name";
                                    text: TableData.active-relative.last-name;
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Sex";
                                }

                                sex := ComboBox {
                                    width: 25%;
                                    model: ["male", "female"];
                                    current-value: TableData.active-relative.sex;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Birthday";
                                }

                                birthday := LineEdit {
                                    placeholder-text: "Birthday (YYYY-MM-DD)";
                                    text: TableData.active-relative.birthday;
                                    width: 25%;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Phone";
                                }

                                phone := LineEdit {
                                    placeholder-text: "Phone";
                                    text: TableData.active-relative.phone;
                                    width: 25%;
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Email";
                                }

                                email := LineEdit {
                                    placeholder-text: "Email";
                                    text: TableData.active-relative.email;
                                    width: 40%;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "ATNum";
                                }

                                LineEdit {
                                    placeholder-text: "ATNum";
                                    width: 25%;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Sameness";
                                }

                                sameness := LineEdit {
                                    placeholder-text: "Sameness";
                                    text: TableData.active-relative.sameness;
                                    width: 25%;
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: @tr("Employable | {}", employable.value);
                                }

                                employable := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    value: TableData.active-relative.employable;
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Hotness | {}", hotness.value);
                                }

                                hotness := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    value: TableData.active-relative.hotness;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Swarthy | {}", swarthy.value);
                                }

                                swarthy := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    value: TableData.active-relative.swarthy;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: @tr("Crazy | {}", crazy.value);
                                }

                                crazy := Slider {
                                    minimum: 0;
                                    maximum: 10;
                                    width: 25%;
                                    value: TableData.active-relative.crazy;
                                    enabled: sex.current-value == sex.model[1];
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            VerticalLayout {
                                Text {
                                    text: "Lost Reason";
                                }

                                lost := LineEdit {
                                    placeholder-text: "Lost Reason";
                                    text: TableData.active-relative.lost-reason;
                                }
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            pinned := CheckBox {
                                text: "Pinned";
                                checked: TableData.active-relative.pinned;
                            }
                        }

                        HorizontalBox {
                            spacing: 10px;
                            alignment: space-around;
                            VerticalLayout {
                                Text {
                                    text: "Choose Mother";
                                }

                                mother-table := StandardTableView {
                                    width: 300px;
                                    height: 150px;
                                    columns: [
                                        { title: "Name" },
                                        { title: "age" },
                                        { title: "phone" },
                                    ];
                                    rows: TableData.females2;
                                    current-row-changed(i) => {
                                        TableData.selected-mother-id = i;
                                    }
                                }
                            }

                            VerticalLayout {
                                Text {
                                    text: "Choose Father";
                                }

                                father-table := StandardTableView {
                                    width: 300px;
                                    height: 150px;
                                    columns: [
                                        { title: "Name" },
                                        { title: "age" },
                                        { title: "phone" },
                                    ];
                                    rows: TableData.males;
                                    current-row-changed(i) => {
                                        TableData.selected-father-id = i;
                                    }
                                }
                            }
                        }

                        HorizontalBox {
                            Button {
                                text: "Save";
                                clicked => {
                                    relative = {
                                        first-name: first-name.text,
                                        middle-name: middle-name.text,
                                        last-name: last-name.text,
                                        sex: sex.current-value,
                                        phone: phone.text,
                                        email: email.text,
                                        birthday: birthday.text,
                                        lost-reason: lost.text,
                                        sameness: sameness.text,
                                        pinned: pinned.checked,
                                        hotness: hotness.value,
                                        employable: employable.value,
                                        crazy: crazy.value,
                                        swarthy: swarthy.value,
                                    };
                                    TableData.update-relative(TableData.active-relative.id,relative)
                                }
                            }
                        }

                        /*
                        HorizontalBox {
                            width: 100%;
                            VerticalLayout {
                                alignment: center;
                                Rectangle {
                                    height: 100px;
                                    width: 100px;
                                    border-radius: 5px;
                                    background: Palette.color-scheme == ColorScheme.dark ? #4c566a : #d8dee9;
                                    if TableData.active-relative-image == "":Text {
                                        text: "Image";
                                        color: Palette.color-scheme == ColorScheme.dark ? #eceff4 : #2e3440;
                                    }
                                    if TableData.active-relative-image != "": Image { }
                                }
                            }

                            VerticalLayout {
                                alignment: center;
                                CustomButton {
                                    title: "Upload Photo";
                                    height: 40px;
                                    width: 120px;
                                    background: Palette.color-scheme == ColorScheme.dark ? #5e81ac : #81a1c1;
                                    clicked => {
                                        TableData.add-image-for-relative(TableData.active-relative.id);
                                    }
                                }
                            }
                        }
                        */
                    }
                }

                GroupBox {
                    VerticalLayout {
                        spacing: 10px;
                        /*
                        HorizontalLayout {
                            spacing: 10px;
                            StandardTableView {
                                columns: [{ title: "Name" }, { title: "Born" }];
                                rows: [
                                    [{ text:"Sister Hotty" }, { text: "4-5-2023" }],
                                    [{ text: "Brother Bob Thorton" }, { text: "6-3-2024" }],
                                ];
                            }

                            StandardTableView {
                                columns: [{ title: "Name" }, { title: "Born" }];
                                rows: [
                                    [{ text:"Henrietta Hotty" }, { text: "4-5-2023" }],
                                    [{ text: "Billy Bob Thorton" }, { text: "6-3-2024" }],
                                ];
                            }
                        }
                        */

                        HorizontalLayout {
                            alignment: space-around;
                            /*CustomButton {
                                height: 40px;
                                width: 120px;
                                title: @tr("Pin/Unpin record");
                                background: #16a;
                            }*/

                            CustomButton {
                                height: 40px;
                                width: 120px;
                                title: @tr("Delete");
                                background: red;
                                clicked => {
                                    TableData.delete-relative(TableData.active-relative.id);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
